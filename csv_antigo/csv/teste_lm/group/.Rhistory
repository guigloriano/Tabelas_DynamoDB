load("C:/Users/LSCAD/Desktop/TestesKym/analise_dados/analise_dados.Rproj")
load("C:/Users/LSCAD/Desktop/TestesKym/analise_dados/levantamento.R")
load("C:/Users/LSCAD/Desktop/TestesKym/analise_dados/ufv-ufms2/codigos/f1.R")
# dados produÃ§Ã£o IrecÃª
f <- function(x){
if(!is.na(stringr::str_extract(x, "aurora_vision"))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = ".csv")
files <- files[!stringr::str_detect(files, "planta")]
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 9, na.strings = "n/a")))
return(d)
}
return()
}
install.packages("stringr")
dirs <- list.dirs("../../../monitoramento-irece/Arquivos", full.names = TRUE, recursive = TRUE)
require(stringr)
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
pathrepo <- "C:\Users\LSCAD\Desktop\TestesKym\MonitoramentoUFMS"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "/home/LSCAD/Desktop/TestesKym/MonitoramentoUFMS"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
getwd()
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "C:/Users/LSCAD/Desktop/TestesKym"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
regex.estacao.path <- regex("WeatherHawk$")
columns.estacao <- c("timestamp","dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase", "data")
columns.estacao.tonumeric <- c("dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
View(filter_data)
View(filter_data)
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "/home/Users/LSCAD/Desktop/TestesKym"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
regex.estacao.path <- regex("WeatherHawk$")
columns.estacao <- c("timestamp","dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase", "data")
columns.estacao.tonumeric <- c("dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
View(f1)
View(f1)
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "/home/Users/LSCAD/Desktop/TestesKym/MonitoramentoUFMS"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
regex.estacao.path <- regex("WeatherHawk$")
columns.estacao <- c("timestamp","dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase", "data")
columns.estacao.tonumeric <- c("dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
#C:\SPB_Data\TestesKym\MonitoramentoUFMS
pathrepo <- "/home/SPB_Data/TestesKym/MonitoramentoUFMS"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
regex.estacao.path <- regex("WeatherHawk$")
columns.estacao <- c("timestamp","dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase", "data")
columns.estacao.tonumeric <- c("dir_vento", "vel_vento", "raj_vento", "umidade", "temp_in", "temp", "raw_barom", "chuva_tot", "rad_sol", "p_orvalho", "barom_sl", "rad_sol_avg", "vel_vento_max", "raj_vento_max", "umidade_max", "temp_in_max", "temp_max", "raw_barom_max", "chuva_tot_max", "rad_sol_max", "barom_sl_max", "vel_vento_min", "raj_vento_min", "umidade_min", "temp_in_min", "temp_min", "raw_barom_min", "chuva_tot_min", "rad_sol_min", "barom_sl_min", "moon_phase")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
source('~/TestesKym/analise_dados/ufv-ufms2/codigos/f1.R')
require(ggplot2)
require(lmtest)
library("stringr")
arqEst <- "~/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv"
arqEst <- "../ambientais_ufms_OK.csv"
arqEst
arqEst <- "~/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv"
arqEst <- "~/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv"
arqEst <- "DadosEst/ambientais_ufms_OK.csv"
arqInvFronius <- "~/Projeto/monitoramento-ufms"
arqEst <- "DadosEst/ambientais_ufms_OK.csv"
arqEst <- read.csv("/DadosEst/ambientais_ufms_OK.csv")
arqEst <- read.csv("~/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv")
arqEst <- read.csv("/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv")
arqEst <- read.csv("DadosEst/ambientais_ufms_OK.csv")
arqEst <- "~/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv"
load("C:/Users/LSCAD/Documents/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv")
ambientais_ufms_OK <- read.csv("C:/Users/LSCAD/Documents/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv", header=FALSE)
View(ambientais_ufms_OK)
arqEst <- read.csv("C:/Users/LSCAD/Documents/Projeto/Tabelas_DynamoDB/RProject/DadosEst/ambientais_ufms_OK.csv",
header=FALSE)
arqEst2 <- read.csv('/DadosEst/ambientais_ufms_OK.csv')
arqEst2 <- read.csv(file = '/DadosEst/ambientais_ufms_OK.csv')
arqEst2 <- read.csv(file = 'DadosEst/ambientais_ufms_OK.csv')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/z_quebrarDataset.R')
library(dplyr)
library(readr)
library(stringr)
library(pracma)
library(compareDF)
modelo <- zy_merge$P_AC ~ zy_merge$irr_est + zy_merge$irr_inv + zy_merge$temp + zy_merge$numPM1 + zy_merge$massaPM1 +
zy_merge$numPM2 + zy_merge$massaPM2 + zy_merge$vento_vel + zy_merge$vento_dir + zy_merge$DVr1 + zy_merge$DVr2 +
zy_merge$IDV1 + zy_merge$IDV2 + zy_merge$Vd1 + zy_merge$Pd + zy_merge$Nloss + zy_merge$Vd2 + zy_merge$m +
zy_merge$x_gauss + zy_merge$SR
summary(reg_linear)
