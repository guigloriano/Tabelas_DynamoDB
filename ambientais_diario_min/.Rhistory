View(df)
write_csv(df,'D:\\')
write_csv(df,'D:\\teste')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
i = 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
# Ra = resistencia aerodinamica
# Cds = coeficiente de arrasto da superfície [ 1.2 * 10^(-2) ]
# U = velocidade media do vento (m/s)
Cds = 1.2*10^(-2)
U = Vel_Med_Vento / 3.6
Ra = 1/(Cds * U)
# U_estrela = velocidade de atrito
# constante de Von Karman [ VonKarman = 0.41 ]
# h = altura de referencia [m ?]
# z0 = 1, dimensao de rugosidade para o caso de terrenos urbanos
VonKarman = 0.41
h = 2.5
z0 = 1
U_estrela = VonKarman * U/ (log(h/z0))
# D = coeficiente de difusa browniano [ m²/s ]
# k = constante de Boltzmann [ 1.38 * 10^(-23) J/k]
# T_Ar = temperatura do ar [ em Kelvin, K = °C + 273,15 ]
# u = viscosidade do ar [ 1.81 * 10^(-5) kg/ms ]
# Dp = diametro da particula [ m , PM2.5 = 2.5*10^-(6)]
k = 1.38*10^(-23)
T_Ar = Temp_Media + 273.15
u = 1.81*10^(-5)
Dp = 2.5*10^(-6)
D = k*T_Ar/(3 * pi * u * Dp )
# Sc = numero de Schmidt
# v = viscosidade cinematica do ar [ 1.48 * 10^(-5) m²/s ]
v = 1.48*10^(-5)
Sc = v/D
# Vs = velocidade de sedmentacao
# Pp = densidade da particula aerosol [ 1000 kg/m³ ]
# g = aceleracao gravitacional [ 9,81 m/s² ]
# u = viscosidade do ar [ 1.81 * 10^(-5) kg/ms ]
# Cc = fator de correcao de Cunninghann [ ~ 1 ]
Pp = 1000
g = 9.81
Cc = 1
Vs = ((1 * (Dp^2) * Pp * g)/(18 * u)) * Cc
# St = numero de Strokes
St = ( U_estrela^2 * Vs)/(g * v)
# Rb = resistencia da camada quasi-laminar
Rb = 1/(3 * U_estrela * (Sc^(-0.5) + (St/(1+St))^(2) ) )
# theta = inclinacao dos modulos [ em ° ]
theta = (15*pi)/180
### Modelo 01 - On temporal modelling (...) in seven cities
# Vd = velocidade de deposicao
Vd1 = 1/(Ra+Rb) + Vs*cos(theta)
Pd = Vd1 * ConcentracaoMassa * 10^(-6)
Nloss = 0.015 * Pd
### Modelo 02 - Simple Model for Predicting (...) of PV Panels
# t unidade de tempo em segundos
t_sec = 86400
Vd2 = 1/(Ra+Rb) + Vs
m = Vd2 * ConcentracaoMassa* 10^(-6) * cos(theta) * t_sec
x_gauss = 0.17*m^(0.8473)
SR = 1 - 34.37*erf(x_gauss)
m
x_gauss
SR
#  m = Vd2 * ConcentracaoMassa * 10^(-6)  * cos(theta) * 1
#  x_gauss = 0.17*m^(0.8473)
#  SR = 1 - 34.37*erf(x_gauss)
Pd
Nloss
#  1 - Nloss * 10^6
#  aux2 = 1 - Nloss
df <- rbind (df, list(x$dia_mes_ano[1], Vd1, Pd, Nloss, Vd2, m, x_gauss, SR))
View(df)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, x$dia_mes_ano[1], Vd1, Pd, Nloss, Vd2, m, x_gauss, SR)
View(df)
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
View(df)
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
View(df)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
View(df)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" )) , stringsAsFactors=F
#install.packages("pracma")
install.packages("data.table")              # Install data.table package
library("data.table")                       # Load data.table package
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
install.packages("data.table")
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
df <- setNames(data.frame(matrix(ncol = 8)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list(x$dia_mes_ano[1],
Vd1, Pd, Nloss, Vd2, m, x_gauss, SR), deparse.level = 1)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 8)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame, c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
View(df)
df <- rbind(df, list("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"), deparse.level = 0)
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"), deparse.level = 1)
View(df)
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"), deparse.level = 5)
View(df)
df <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"), deparse.level = 5)
df <- rbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"), deparse.level = 5)
df <- rbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR")
View(df)
df <- cbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR")
df <- rbind("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR")
View(df)
df <- rbind(df, list("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
View(df)
df <- cbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR")
df <- data.frame(cbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
View(df)
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- data.frame(cbind("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
View(df)
df <- setNames(data.frame(matrix(ncol = 8, nrow = 0)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- setNames(data.frame(matrix(ncol = 8, nrow = 1)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df <- rbind(df, list("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia3", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- rbind(df, list("dia4", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df <- df(-c(1))
df1 <- df(-c(1))
df1 <- setNames(data.frame(matrix(ncol = 8, nrow = 1)),
c("dia", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR" ))
df1 <- rbind(df, list("dia4", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df1 <- rbind(df, list("dia3", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df1 <- rbind(df, list("dia2", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df1 <- rbind(df, list("dia1", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
df1 <- rbind(df, list("dia11", "Vd", "Pd", "Nloss", "Vd2", "m", "x_gauss", "SR"))
View(df1)
df2 <- df1(-c(1))
df2 <- df1[(-c(1),]
df2 <- df1[-c(1),]
View(df2)
df1 <- df1[-c(1),]
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa <- data.frame
View(VetorConcentracaoMassa)
VetorConcentracaoMassa = append(VetorConcentracaoMassa, ConcentracaoMassa)
View(VetorConcentracaoMassa)
VetorConcentracaoMassa <- c(ConcentracaoMassa)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa[1]
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('~/.active-rstudio-document')
x <- c(0:10, 50)
xm <- mean(x)
c(xm, mean(x, trim = 0.10))
xm
x
mean(4, 6, 7, 3, 5)
sum(4, 6, 7, 3, 5)
mean(c(4, 6, 7, 3, 5)
mean(c(4, 6, 7, 3, 5)
mean(c(4, 6, 7, 3, 5))
mean(4, 6, 7, 3, 5)
mean(c(4, 6, 7, 3, 5))
mean(4, 6, 7, 3, 5)
mean(c(4, 6, 7, 3, 5))
source('~/.active-rstudio-document')
mean(4, 6, 7, 3)
mean(c(4, 6, 7, 3))
mean(4, 6, 7, 3)
mean(c(4, 6, 7, 3))
mean(4, 6, 5)
mean(c(4, 6, 5))
()
mean(4, 6, 5)
mean(c(4, 6, 5))
mean(4, 6, 5, 5)
mean(c(4, 6, 5, 5))
source('~/.active-rstudio-document')
mean(4, 6, 5, 5)
mean(c(4, 6, 5, 5))
mean(4, 6, 5, 45)
mean(c(4, 6, 5, 45))
mean(3, 6, 5, 45)
mean(c(1:5))
VetorConcentracaoMassa <- 0
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa[1]
mean(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[3]:VetorConcentracaoMassa[i])
i
mean(VetorConcentracaoMassa[4]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[5]:VetorConcentracaoMassa[i])
VetorConcentracaoMassa[5]
VetorConcentracaoMassa[i]
VetorConcentracaoMassa
mean(VetorConcentracaoMassa[0]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[3]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[4]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[5]:VetorConcentracaoMassa[i])
mean(VetorConcentracaoMassa[41]:VetorConcentracaoMassa[i])
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
mean(VetorConcentracaoMassa)
VetorConcentracaoMassa
#install.packages("pracma")
#install.packages("data.table")              # Install data.table package
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 11, nrow = 1)),
c("dia", "Vd", "Pd", "Pd2", "Nloss", "Nloss2", "Vd2", "m", "x_gauss", "SR", "SR2" ))
Pd2 <- 0
SR2 <- 0
Nloss2 <- 0
VetorConcentracaoMassa <- 0
i = 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
mean(VetorConcentracaoMassa)
mean(c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i]))
mean(c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1]))
a=mean(c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1]))
a=mean(c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1]))
a=mean(c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1]))
# Ra = resistencia aerodinamica
# Cds = coeficiente de arrasto da superfície [ 1.2 * 10^(-2) ]
# U = velocidade media do vento (m/s)
Cds = 1.2*10^(-2)
VetorConcentracaoMassa[1]
VetorConcentracaoMassa[i+1]
c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1])
a=mean(c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1]))
a=mean(c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1]))
c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1])
i = 2
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
a=mean(c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1]))
(c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1]))
VetorConcentracaoMassa[i+1]
VetorConcentracaoMassa[2]
c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1])
mean(c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1]))
VetorConcentracaoMassa[2]
a=c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1])
a=c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1])
a=c(VetorConcentracaoMassa[1]:VetorConcentracaoMassa[i+1])
a=c(VetorConcentracaoMassa[3]:VetorConcentracaoMassa[i+1])
a=c(VetorConcentracaoMassa[2]:VetorConcentracaoMassa[i+1])
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa[-1]
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa
VetorConcentracaoMassa <- c(ConcentracaoMassa)
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 11, nrow = 1)),
c("dia", "Vd", "Pd", "Pd2", "Nloss", "Nloss2", "Vd2", "m", "x_gauss", "SR", "SR2" ))
Pd2 <- 0
SR2 <- 0
Nloss2 <- 0
VetorConcentracaoMassa <- 0
i = 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
i = 2
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
i = 3
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
VetorConcentracaoMassa <- c(VetorConcentracaoMassa, ConcentracaoMassa)
VetorConcentracaoMassa
if (VetorConcentracaoMassa[1] == 0){
VetorConcentracaoMassa[-1]
}
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa
if (VetorConcentracaoMassa[1] == 0){
VetorConcentracaoMassa[-1]
}
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa
if (VetorConcentracaoMassa[1] == 0){
VetorConcentracaoMassa[-1]
}
VetorConcentracaoMassa
VetorConcentracaoMassa <- VetorConcentracaoMassa[-1]
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassaMedia <- mean(VetorConcentracaoMassa)
MediaConcentracaoMassaMedia <- mean(VetorConcentracaoMassa)
MediaConcentracaoMassaMedia
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassaMedia
MediaConcentracaoMassa
ConcentracaoMassa
VetorConcentracaoMassa
ConcentracaoMassa
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 11, nrow = 1)),
c("dia", "Vd", "Pd", "Pd2", "Nloss", "Nloss2", "Vd2", "m", "x_gauss", "SR", "SR2" ))
Pd2 <- 0
SR2 <- 0
Nloss2 <- 0
aux <- 0
i = 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
aux <- c(aux, ConcentracaoMassa)
if (aux[1] == 0){
VetorConcentracaoMassa <- aux[-1]
}
MediaConcentracaoMassa <- mean(VetorConcentracaoMassa)
aux <- c(aux, MediaConcentracaoMassa)
if (aux[1] == 0){
VetorConcentracaoMassaMedia <- aux[-1]
}
VetorConcentracaoMassa
MediaConcentracaoMassa
mean(VetorConcentracaoMassa)
aux
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
#install.packages("pracma")
#install.packages("data.table")              # Install data.table package
library(pracma)
library(readr)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min\\")
names <- list.files(pattern = "*.csv")
df <- setNames(data.frame(matrix(ncol = 11, nrow = 1)),
c("dia", "Vd", "Pd", "Pd2", "Nloss", "Nloss2", "Vd2", "m", "x_gauss", "SR", "SR2" ))
Pd2 <- 0
SR2 <- 0
Nloss2 <- 0
aux1 <- 0
aux2 <- 0
i = 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
# Vel_Med_Vento eh dado em km/h
Vel_Med_Vento = round(mean(x$vento_vel), digits = 5)
# Temperatura media em °C
Temp_Media = round(mean(x$temp), digits = 5)
# Soma da Massa dos Particulados ug/m³
ConcentracaoMassa = round(mean(x$massaPM1) + mean(x$massaPM2), digits = 5)
aux1 <- c(aux1, ConcentracaoMassa)
if (aux1[1] == 0){
VetorConcentracaoMassa <- aux1[-1]
}
MediaConcentracaoMassa <- mean(VetorConcentracaoMassa)
aux2 <- c(aux2, MediaConcentracaoMassa)
if (aux2[1] == 0){
VetorConcentracaoMassaMedia <- aux2[-1]
}
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
VetorConcentracaoMassa
MediaConcentracaoMassa
VetorConcentracaoMassaMedia
VetorConcentracaoMassaMedia[2]
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
aux4
aux3
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
aux3
aux4
source('D:/github/Tabelas_DynamoDB/RProject/dust_deposition.R')
