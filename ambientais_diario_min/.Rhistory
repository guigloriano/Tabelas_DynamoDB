ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                         geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
scale_x_continuous(breaks = seq(from = 0, to = 20, by = 0.25)) +
ggtitle("Distribuicao de Massa")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                         geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes, pch = 3) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa") +
scale_y
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa") +
pch = 1
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm4_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
png(“r-graphics.png”)
png("r-graphics.png")
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm4_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
png("r-graphics.png")
print(graf)
dev.off()
img <- png("myplot.png")
print(graf)
dev.off()
View(graf)
save(graf)
#ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = pm1_massa, group = 1)) +
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm4_massa", group=1)) +
#                          geom_point(shape=21, color="black", fill="#69b3a2", size=2) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
png(filename = paste("C:/",gsub("[.]","_", dia),'.png', sep = ""), width = 1000, height = 537, units = 'px')
png(filename = paste("C:/",'.png', sep = ""), width = 1000, height = 537, units = 'px')
png(filename = paste("D:/github/Tabelas_DynamoDB/merge/daily/teste",'.png', sep = ""), width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
dia <- dados_graf$dia_mes_ano
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/pms/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".csv", sep = "")
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest), width = 1000, height = 537, units = 'px')
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
fileDia <- 20191026
csvPath <- setwd("D:/github/Tabelas_DynamoDB/merge/daily/Inv_Est_Merge_")
fileDia <- 20191026
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_")
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_\\")
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_\\")
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_\\")
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_\\")
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_\\"
csvFile <- paste(csvPath, fileDia, ".csv", sep = "")
names <- list.files(pattern = "*.csv")
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_"
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\Inv_Est_Merge_"
names <- list.files(pattern = "*.csv")
files <- setwd("D:\\github\\Tabelas_DynamoDB\\inversor_diario_min\\")
names <- list.files(pattern = "*.csv")
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\"
names <- list.files(pattern = "*.csv")
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\"
names <- list.files(pattern = "*.csv")
for(i in 1:length(names)){
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
}
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
library(dplyr)
library(magrittr)
library(readr)
library(tidyverse)
library(ggplot2)
csvPath <- "D:\\github\\Tabelas_DynamoDB\\merge\\daily\\"
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
View(`inversor_1_ufms-20191003.csv`)
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
dataset <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
dados_graf = as.data.frame(dataset)
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_line(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm4_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm10_massa", group=1)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/pms/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_pms.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
library(dplyr)
library(magrittr)
library(readr)
library(tidyverse)
library(ggplot2)
for(i in 1:length(names)){
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
dataset <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
dados_graf = as.data.frame(dataset)
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_bar(aes(y=pm1_massa, color="pm1_massa", group=1)) +
geom_line(aes(y=pm2_massa, color="pm2_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/pms/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
}
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
csvPath <- setwd("D:\\github\\Tabelas_DynamoDB\\merge\\daily\\")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
dataset <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
dados_graf = as.data.frame(dataset)
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_bar(aes(y=precitacao, color="precitacao", group=1)) +
geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/part_precip/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_bar(aes(y=preciptacao, color="precitacao", group=1)) +
geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/part_precip/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto)) +
geom_bar(aes(y=preciptacao, color="precitacao", group=1)) +
geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y=preciptacao)) +
#    geom_bar(aes(y=preciptacao, color="precitacao", group=1)) +
#    geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/part_precip/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
graf <- ggplot(data = dados_graf, mapping = aes(x = hora_minuto, y = preciptacao)) +
geom_bar(stat="identity")   +
#    geom_bar(aes(y=preciptacao, color="precitacao", group=1)) +
#    geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/part_precip/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
graf <- ggplot(data = dados_graf,
mapping = aes(x = hora_minuto, y = preciptacao,
fill=pm1_massa)) +
geom_bar(stat="identity")   +
#    geom_bar(aes(y=preciptacao, color="precitacao", group=1)) +
#    geom_bar(aes(y=pm1_massa, color="pm1_massa", group=2)) +
#    geom_line(aes(y=pm4_massa, color="pm4_massa", group=3)) +
#    geom_line(aes(y=pm10_massa, color="pm10_massa", group=4)) +
theme(axis.text.x = element_text(angle = 90)) +
labs(x = "Hora", y = "Concentracao de Particulado [ug/cm³]") +
ggtitle("Distribuicao de Massa")
dia <- dados_graf$dia_mes_ano[1]
pathDest <- "D:/github/Tabelas_DynamoDB/merge/graph/part_precip/"
fileDest <- paste(pathDest,  "graf_particulados_", dia, ".png", sep = "")
png(filename = fileDest, width = 1000, height = 537, units = 'px')
print(graf)
dev.off()
source('D:/github/Tabelas_DynamoDB/RProject/graphic_test.R')
medias <- length(x$rainfall)
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
View(`ambientais_ufms-20191003.csv`)
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
View(x)
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
medidas <- length(x$rainfall)
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
for (j in 2:length(x$rainfall)){
if (x$rainfall[j] == x$rainfall[j-1]) {
x$rainfall[j] <- 0;
}
}
View(x)
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
for (j in 2:length(x$rainfall)){
if (x$rainfall[j] == x$rainfall[j-1]) {
ultMedida <- j-1
x$rainfall[j] <- 0
while (x$rainfall[j+1] == x$rainfall[ultMedida]){
x$rainfall[j+1] <- 0
j<-j+1
}
}
}
View(x)
ultMedida <- -1
valorRainfall <- -1
valorRainfall <- -1
if (x$rainfall[j] == x$rainfall[j-1]) {
ultMedida <- x$rainfall[j]
x$rainfall[j] <- 0
}
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
for(i in 1:length(names)){
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
for (j in 2:length(x$rainfall)){
valorRainfall <- -1
if (x$rainfall[j] == x$rainfall[j-1]){
ultMedida <- x$rainfall[j-1]
x$rainfall[j] <- 0
j <- j+1
while (x$rainfall[j] == x$rainfall[ultMedida]){
x$rainfall[j] <- 0
j <- j+1
}
}
}
g <- dplyr::group_by(x, dia_mes_ano, h = substr(hora_minuto, 1, 2),
m = floor(as.numeric(substr(hora_minuto, 3, 4))/15))
gg <- dplyr::summarise(g, hora_minuto = dplyr::first(hora_minuto),
irradiacao = mean(irr),
temperatura = mean(temp),
#umidade = mean(hum),
preciptacao = max(rainfall),
pm1_massa = mean(massaPM1),
pm2_massa = mean(massaPM2),
pm4_massa = mean(massaPM4),
pm10_massa = mean(massaPM10),
pm1_concentracao = mean(numPM1),
pm2_concentracao = mean(numPM2),
pm4_concentracao = mean(numPM4),
pm10_concentracao = mean(numPM10),
concentracao_media = mean(tamanho_medio),
vento_dir=mean(vento_dir),
vento_vel=mean(vento_vel),
n = dplyr::n())
y <- gg
y$h <- NULL
y$m <- NULL
#write_csv(y,'C:\\Users\\LSCAD\\Documents\\Projeto\\Tabelas_DynamoDB\\ambientais_diarios_15min\\Ambientais15m_CG_20191004.csv')
y$irradiacao <-round(y$irradiacao, digits = 2)
y$temperatura <- round(y$temperatura, digits = 2)
#y$preciptacao <-round(y$preciptacao, digits = 2)
y$pm1_massa <- round(y$pm1_massa, digits = 2)
y$pm2_massa <- round(y$pm2_massa, digits = 2)
y$pm4_massa <- round(y$pm4_massa, digits = 2)
y$pm10_massa <- round(y$pm10_massa, digits = 2)
y$pm1_concentracao <- round(y$pm1_concentracao, digits = 2)
y$pm2_concentracao <- round(y$pm2_concentracao, digits = 2)
y$pm4_concentracao <- round(y$pm4_concentracao, digits = 2)
y$pm10_concentracao <- round(y$pm10_concentracao, digits = 2)
y$concentracao_media <- round(y$concentracao_media, digits = 2)
y$vento_dir <- round(y$vento_dir, digits = 2)
y$vento_vel <- round(y$vento_vel, digits = 2)
salvarArq_path <- "D:\\github\\Tabelas_DynamoDB\\ambientais_diario_15min\\"
salvarArq_name <- paste(salvarArq_path, "15min_", names[i], sep = "")
write_csv(y, salvarArq_name)
}
View(x)
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
for (j in 2:length(x$rainfall)){
valorRainfall <- -1
if (x$rainfall[j] == x$rainfall[j-1]){
ultMedida <- x$rainfall[j-1]
x$rainfall[j] <- 0
j <- j+1
while (x$rainfall[j] == x$rainfall[ultMedida]){
x$rainfall[j] <- 0
j <- j+1
}
}
}
for (j in 2:length(x$rainfall)){
if (x$rainfall[j] == x$rainfall[j-1]){
ultMedida <- j-1
x$rainfall[j] <- 0
j <- j+1
while (x$rainfall[j] == x$rainfall[ultMedida]){
x$rainfall[j] <- 0
j <- j+1
}
}
}
View(x)
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
j<-2
if (x$rainfall[j] == x$rainfall[j-1]){
ultMedida <- j-1
x$rainfall[j] <- 0
j <- j+1
while (x$rainfall[j] == x$rainfall[ultMedida]){
x$rainfall[j] <- 0
j <- j+1
}
}
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
assign(names[1],read.csv(names[1],skip=1, header=TRUE))
x <- readr::read_csv(names[1], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
j<-2
inicial <- j-1
if (x$rainfall[j] == x$rainfall[inicial]){
x$rainfall[j] <- 0
j <- j+1
}
if (x$rainfall[j] != x$rainfall[inicial]){
j <- j+1
}
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(`ambientais_ufms-20191022.csv`)
View(`ambientais_ufms-20191013.csv`)
View(`ambientais_ufms-20191003.csv`)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(`ambientais_ufms-20191003.csv`)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(`ambientais_ufms-20191003.csv`)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(`ambientais_ufms-20191003.csv`)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(`ambientais_ufms-20191003.csv`)
# List files
library(dplyr)
library(magrittr)
library(readr)
library("stringr")
library(plyr)
files <- setwd("D:\\github\\Tabelas_DynamoDB\\ambientais_diario_min")
names <- list.files(pattern = "*.csv")
i <- 1
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
for (j in 2:length(x$rainfall)){
if ((x$rainfall[j] == x$rainfall[j-1]) ){
x$rainfall[j] <- 0
}
j <- j+1
}
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_station3_allfile2s.R')
