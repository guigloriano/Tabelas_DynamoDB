ambientais.cg.20191023 <- read.csv("~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv", header=FALSE)
View(ambientais.cg.20191023)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=FALSE)
View(dadosEst$V1)
View(dadosEst$V2)
teste <- mean(dadosEst$V2)
View(dadosEst$V2)
teste <- mean(dadosEst$V4)
View(dadosEst$V2)
dadosEst
View(ambientais.cg.20191023)
View(ambientais.cg.20191023)
View(dadosEst$Horario)
View(dadosEst$PM1 massa (mg/m^3))
teste <- mean(dadosEst$c1!=0, 1)
View(teste)
library(dplyr)
library(magrittr)
teste <- mean(dadosEst$V4)
dadosEst <- read.csv(caminho_CSV, header=FALSE)
teste <- mean(dadosEst$V4)
PM1massa <- dadosEst$V4
View(PM1massa)
PM1massa <- as.numeric(levels(PM1massa))
teste <- mean(dadosEst$V4, na.rm = FALSE)
PM1massa <- as.numeric(levels(PM1massa))
teste <- mean(PM1massa, na.rm = FALSE)
View(teste)
View(dadosEst)
PM1massa <- dadosEst$V4
teste <- c(12,7,3,4.2,18,2,54,-21,8,-5,NA)
teste <- c(12,7,3,4.2,18,2,54.4,-21,8,-5,NA)
View(PM1massa)
PM1massa <- dadosEst$V4
PM1massa <- as.numeric(levels(PM1massa))
PM1massa <- dadosEst$V4
PM1massa2 <- as.numeric(levels(PM1massa))
View(PM1massa2)
PM1massa2 <- as.numeric(PM1massa)
PM1massa3 <- as.numeric(PM1massa)
View(PM1massa3)
View(ambientais.cg.20191023)
View(ambientais.cg.20191023)
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=FALSE)
View(dadosEst)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
View(PM1massa001)
dadosEst <- read.csv(caminho_CSV, header=TRUE)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE)
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
View(PM1massa001)
View(dadosEst)
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$V4
PM1massa002 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$V4
PM1massa001 <- dadosEst$pm1_massa
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191023.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa001 <- dadosEst$pm1_massa
PM1massaMedia <- mean(PM1massa001)
class(dadosEst)
str(dadosEst)
require(stringr)
library(lubridate)
require(dplyr)
#pathrepo <- "/home/kymberlim/Documentos/ProjetoSolar/repositorio/monitoramento-ufms"
pathrepo <- "~/Projeto/monitoramento-ufms"
regex.inversor.path <- regex("InversorFronius")
regex.inversor.file <- regex(".*RelatÃ³rio_diÃ¡rio_.*.csv")
columns.inversor <- c("timestamp","I_CA", "I_CC", "V_CA", "V_CC", "E_CA")
filter_data <- strptime("10/11/2018", format = "%d/%m/%Y")
f1 <- function(x){
if(!is.na(str_extract(x, regex.inversor.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex.inversor.file)
d <- do.call("rbind", lapply(files, function(x) read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 2, na.strings = "n/a")))
return(d)
}
return()
}
f2 <- function(x){
if(!is.na(str_extract(x, regex.estacao.path))){
files <- list.files(x, full.names = TRUE, include.dirs = TRUE, recursive = TRUE, pattern = regex(".csv$"))
files <- files[str_sub(files, -10, -5) >= strftime(filter_data, "%y%m%d")]
d <- do.call("rbind", lapply(files, f3))
return(d)
}
return()
}
f3 <- function(x){
d <- read.csv(x, stringsAsFactors = FALSE, header = FALSE, skip = 3, na.strings = "n/a")
d$data = str_sub(x, -10, -5)
return(d)
}
source("~/Projeto/Tabelas_DynamoDB/RProject/a_f1.R")
# Leitura dos dados do inversor
dirs <- list.dirs(pathrepo, full.names = TRUE, recursive = TRUE)
data.inversor <- do.call("rbind", lapply(dirs, f1))
data.inversor$V7 <- NULL
View(dirs)
data.inversor <- do.call("rbind", lapply(dirs, f1))
t <- strptime(data.inversor$V1, "%d.%m.%Y %H:%M")
data.inversor$V1 <- as.numeric(strftime(t, "%Y%m%d%H%M%S"))
names(data.inversor) <- columns.inversor
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
View(dadosEst)
PM1massa <- dadosEst$V4
dadosEst <- read.csv(caminho_CSV, header=TRUE, sep = ",")
PM1massa <- dadosEst$V4
PM1massaMedia <- mean(PM1massa)
PM1massa <- dadosEst$pm1_massa
PM1massaMedia <- mean(PM1massa)
library(dplyr)
library(magrittr)
Group = group_by(dadosEst, horario)
View(Group)
View(dadosEst)
t <- strptime(dadosEst$horario, "%d.%m.%Y %H:%M")
t <- strptime(dadosEst$horario, "%H:%M")
data.inversor$V1 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
t2 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
View(t)
t <- strptime(dadosEst$horario, "%H:%M")
t2 <- as.numeric(strftime(t, H%M%S"))
g = group_by(dataset, data, hora = substr(hora, 1, 2))
dplyr::summarise(g, hora = dplyr::first(hora), temp_ar_avg = mean(temp_ar_avg),
umid_ar_avg = mean(umid_ar_avg), vel_vento = mean(vel_vento),
dir_vento = mean(dir_vento), SD1_dir = mean(SD1_dir),
vel_vento_max = max(vel_vento_max), vel_vento_min = min(vel_vento_min),
press_atm_avg = mean(press_atm_avg), prec_chuva_tot = sum(prec_chuva_tot),
avg_radsol_H = mean(avg_radsol_H), radsol_H_max = max(radsol_H_max),
radsol_H_min = min(radsol_H_min), avg_radsol_I = mean(avg_radsol_I),
radsol_I_max = max(radsol_I_max), radsol_I_min = min(radsol_I_min),
avg_radSNP1_glob = mean(avg_radSNP1_glob), radSPN1_glob_max = max(radSPN1_glob_max),
radSPN1_glob_min = min(radSPN1_glob_min), avg_radSNP1_difusa = mean(avg_radSNP1_difusa),
radSPN1_difusa_max = max(radSPN1_difusa_max), radSPN1_difusa_min = min(radSPN1_difusa_min),
irradiancia_avg = mean(irradiancia_avg), irradiancia_max = max(irradiancia_max),
irradiancia_min = min(irradiancia_min), irradiancia_2_avg = mean(irradiancia_2_avg),
irradiancia_2_max = max(irradiancia_2_max), irradiancia_2_min = min(irradiancia_2_min),
n = n())
t2 <- as.numeric(strftime(t, "H%M%S"))
library(dplyr)
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
library(dplyr)
library(magrittr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
x <- readr::read_csv("~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv", col_types = cols(horario = col_character()))
install(readr)
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
g <- dplyr::group_by(x, data, h = substr(horario, 1, 2),
m = floor(as.numeric(substr(horario, 4, 5))/15))
gg <- dplyr::summarise(g, hora = dplyr::first(horario),
irradiacao = mean(irradiacao),
pm1_massa = mean(pm1_massa),
pm2_massa = mean(pm2_massa),
pm4_massa = mean(pm4_massa),
pm10_massa = mean(pm10_massa),
pm1_concentracao = mean(pm1_concentracao),
pm2_concentracao = mean(pm2_concentracao),
pm4_concentracao = mean(pm4_concentracao),
pm10_concentracao = mean(pm10_concentracao),
concentracao_media = mean(concentracao_media),
temperatura = mean(temperatura),
vento_vel=mean(vento_vel), n = dplyr::n())
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais-cg-20191025.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
g <- dplyr::group_by(x, data, h = substr(horario, 1, 2),
m = floor(as.numeric(substr(horario, 4, 5))/15))
gg <- dplyr::summarise(g, hora = dplyr::first(horario),
irradiacao = mean(irradiacao),
pm1_massa = mean(pm1_massa),
pm2_massa = mean(pm2_massa),
pm4_massa = mean(pm4_massa),
pm10_massa = mean(pm10_massa),
pm1_concentracao = mean(pm1_concentracao),
pm2_concentracao = mean(pm2_concentracao),
pm4_concentracao = mean(pm4_concentracao),
pm10_concentracao = mean(pm10_concentracao),
concentracao_media = mean(concentracao_media),
temperatura = mean(temperatura),
vento_vel=mean(vento_vel), n = dplyr::n())
y <- gg
y$h <- NULL
y$m <- NULL
write_csv(y,'Downloads/Telegram Desktop/mestrado-glo.csv')
write_csv(y,'Downloads/mestrado-glo.csv')
write_csv(y,'Downloads/mestrado-glo.csv')
write.table(y,'Downloads/mestrado-glo.csv')
write.table(y,"~/Projeto/Tabelas_DynamoDB/", sep = ",")
write.table(y, "C:/Users/Guilherme/Documents/Projeto/Tabelas_DynamoDB/", sep = ",")
write_csv(y,'~/Projeto/Tabelas_DynamoDB/mestrado-glo.csv')
write_csv(y,'~/Projeto/Tabelas_DynamoDB/Medias_AmbientaisCG_20191025.csv')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
source('~/Projeto/Tabelas_DynamoDB/RProject/media_15min.R')
library(dplyr)
library(magrittr)
library(readr)
caminho_CSV <- "~/Projeto/Tabelas_DynamoDB/ambientais_ufms_03_a_19_Out_2.csv"
x <- readr::read_csv(caminho_CSV, col_types = cols(horario = col_character()))
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
help(as.period)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(t)
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
for(i in 21:34){
#  i = 21
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
x <- readr::read_csv(names[i], col_types = cols(hora_minuto = col_character()))
x$hora_minuto <- str_pad(x$hora_minuto, width=6, side="left", pad="0")
t <- strptime(paste(x$dia_mes_ano, x$hora_minuto), "%Y%m%d %H%M%S")
t <- t - lubridate::as.period(1, unid = "hours")
x$timestamp <- as.numeric(strftime(t, "%Y%m%d%H%M%S"))
# help(as.period)
salvarArq_path <- "D:\\github\\Tabelas_DynamoDB\\inversor_diario_15min\\"
salvarArq_name <- paste(salvarArq_path, names[i], sep = "")
write_csv(y, salvarArq_name)
}
i = 21
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
assign(names[i],read.csv(names[i],skip=1, header=TRUE))
source('~/.active-rstudio-document', encoding = 'UTF-8')
assign(names[21],read.csv(names[21],skip=1, header=TRUE))
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
View(y)
View(x)
View(x)
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
#  x <- melt(x)
#  df2.m <- melt(df2)
help(merge)
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
View(z)
View(z)
View(y)
y$hora_minuto <- as.character(y$hora_minuto)
View(y)
y$hora_minuto <- str_pad(y$hora_minuto, width=6, side="left", pad="0")
View(y)
View(y)
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/media_15min_inverter3_allfiles.R')
source('~/.active-rstudio-document', encoding = 'UTF-8')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
source('D:/github/Tabelas_DynamoDB/RProject/graphic_all_variables.R')
source('D:/github/Tabelas_DynamoDB/RProject/merge_Station_Inverter_daily.R')
View(z)
