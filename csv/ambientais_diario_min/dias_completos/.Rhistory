library(dplyr)
library(readr)
library(stringr)
library(pracma)
library(compareDF)
install.packages("compareDF")
install.packages("compareDF")
library(dplyr)
library(readr)
library(stringr)
library(pracma)
library(compareDF)
reglinear_caminho <- "D:/github/Tabelas_DynamoDB/csv/teste_lm/reg_linear/"
pathRegLin <- setwd(pathGroup)
pathRegLin <- setwd(pathGroup)
nameRegLin <- list.files(pattern = "*.csv")
filesRegLin <- paste(pathRegLin,  "/", nameRegLin, sep = "")
# agrupamento dos arquivos em registros de 1hr
pathGroup <- group_caminho
group_caminho <- "D:/github/Tabelas_DynamoDB/csv/teste_lm/group/"
reglinear_caminho <- "D:/github/Tabelas_DynamoDB/csv/teste_lm/reg_linear/"
# agrupamento dos arquivos em registros de 1hr
pathGroup <- group_caminho
# leitura dos arquivos pra regressao linear
pathRegLin <- setwd(pathGroup)
pathRegLin <- setwd(pathGroup)
nameRegLin <- list.files(pattern = "*.csv")
filesRegLin <- paste(pathRegLin,  "/", nameRegLin, sep = "")
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_dust_deposition_Part1.R')
aux_dia <- NULL
df <- NULL
RL_final <- data.frame()
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_regressao_linear.R')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_regressao_linear.R')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_regressao_linear.R')
k
k = length(nameDustDep)
k = length(nameRegLin)
k
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_regressao_linear.R')
dataReg
1 + 2
testIRR <- "D:\\github\\Tabelas_DynamoDB\\csv\\teste_lm\\merge\\"
pathIRR <- setwd(testIRR)
pathIRR <- setwd(testIRR)
namesIRR <- list.files(pattern = "*.csv")
filesIRR <- paste(pathIRR,  "/", namesIRR, sep = "")
filesIRR
#for(i in 1:length(namesIRR)){
for(i in 1:1){
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
}
datasetIRR
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
while(datasetIRR$irr != 0){
}
datasetIRR
my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR$irr
my_data %>% filter(datasetIRR$irr < 10 )
my_data <- NULL
my_data %>% filter(datasetIRR$irr < 10 )
my_data <- data.frame()
my_data %>% filter(datasetIRR$irr < 10 )
my_data
datasetIRR$irr
datasetIRR$irr < 10
my_data %>% filter(datasetIRR$irr < 10 )
filter(datasetIRR, datasetIRR$irr < 10 )
datasetIRR
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
filter(datasetIRR, datasetIRR$irr > 10 )
datasetIRR
filter(datasetIRR, datasetIRR$irr > 10 )
filter
datasetIRR
filter(datasetIRR, datasetIRR$irr < 10 )
test <- data.frame(filter(datasetIRR, datasetIRR$irr < 10 ))
test
test <- data.frame(filter(datasetIRR, datasetIRR$irr > 10 ))
View(test)
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$irr < 10 ))
datasetIRR_0
View(datasetIRR_0)
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 0 ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 050000 ))
View(datasetIRR_0)
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 0 ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 050000 ))
View(datasetIRR_5h30)
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto < 50000 ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 50000 ))
View(datasetIRR_0)
View(datasetIRR_5h30)
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto < 50000 ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 50000 ))
View(datasetIRR_0)
datasetIRR$hora_minuto
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto < 050000 ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > 050000 ))
View(datasetIRR_0)
View(datasetIRR_5h30)
testIRR <- "D:\\github\\Tabelas_DynamoDB\\csv\\teste_lm\\merge\\"
pathIRR <- setwd(testIRR)
pathIRR <- setwd(testIRR)
namesIRR <- list.files(pattern = "*.csv")
filesIRR <- paste(pathIRR,  "/", namesIRR, sep = "")
my_data <- data.frame()
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto < "050000" ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > "050000" ))
datasetIRR_0
datasetIRR_5h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > "050000" ))
datasetIRR_5h30
datasetIRR <- readr::read_csv(namesIRR[i], col_types = cols(hora_minuto = col_character()))
# my_data %>% filter(datasetIRR$irr < 10 )
datasetIRR_0 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto < "053000" ))
datasetIRR_5h30 <- data.frame(filter(datasetIRR,
datasetIRR$hora_minuto > "053000",
datasetIRR$hora_minuto < "183000"))
datasetIRR_18h30 <- data.frame(filter(datasetIRR, datasetIRR$hora_minuto > "183000" ))
datasetIRR_18h30
datasetIRR_18h30
View(datasetIRR_0)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_dust_deposition_Part1.R')
# leitura dos arquivos pra o script de dust_deposition
pathDustDep <- setwd(est_caminho)
pathDustDep <- setwd(est_caminho)
nameDustDep <- list.files(pattern = "*.csv")
filesDustDep <- paste(pathDustDep, "/", nameDustDep, sep = "")
est_caminho <- "D:/github/Tabelas_DynamoDB/csv/ambientais_diario_min/dias_completos/"
# leitura dos arquivos pra o script de dust_deposition
pathDustDep <- setwd(est_caminho)
pathDustDep <- setwd(est_caminho)
nameDustDep <- list.files(pattern = "*.csv")
filesDustDep <- paste(pathDustDep, "/", nameDustDep, sep = "")
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_dust_deposition_Part1.R')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_dust_deposition_Part1.R')
source('D:/github/Tabelas_DynamoDB/RProject/scripts/e_dust_deposition_Part1.R')
